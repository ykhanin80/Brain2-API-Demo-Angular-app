{
  "openapi": "3.0.1",
  "info": {
    "title": "BRAIN2 API",
    "version": "v1"
  },
  "paths": {
    "/api/v1/articles/{articleNumber}": {
      "delete": {
        "tags": [
          "Articles"
        ],
        "summary": "Deletes an entire article by article number",
        "operationId": "ArticlesV1_DeleteArticle",
        "parameters": [
          {
            "name": "articleNumber",
            "in": "path",
            "description": "The number of the article to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v1/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Gets all devices",
        "operationId": "DevicesV1_Get",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/articles/{articleNumber}/labeler": {
      "get": {
        "tags": [
          "LabelerArticle"
        ],
        "summary": "Gets an article by article number with only labeler data.",
        "operationId": "LabelerArticleV1_GetLabelerArticle",
        "parameters": [
          {
            "name": "articleNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LabelerArticle"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelerArticle"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelerArticle"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "LabelerArticle"
        ],
        "summary": "Modifies an existing article resource with updated labeler article data",
        "operationId": "LabelerArticleV1_UpdateLabelerArticle",
        "parameters": [
          {
            "name": "articleNumber",
            "in": "path",
            "description": "The article number of the existing resource to modify",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON patch doc for labeler article data",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LabelerArticleJsonPatchDocument"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LabelerArticleJsonPatchDocument"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LabelerArticleJsonPatchDocument"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LabelerArticleJsonPatchDocument"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v1/articles/labeler": {
      "get": {
        "tags": [
          "LabelerArticle"
        ],
        "summary": "Gets all articles with only labeler data matching filtering, paging, and sorting information.",
        "operationId": "LabelerArticleV1_GetLabelerArticles",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Offset for pagination",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 0
            },
            "example": 0
          },
          {
            "name": "take",
            "in": "query",
            "description": "Max. number of returned records",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1000
            },
            "example": 1000
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort expression",
            "schema": {
              "type": "string",
              "example": "number+"
            },
            "example": "number+"
          },
          {
            "name": "articleName",
            "in": "query",
            "description": "Search value for finding all articles where the article name contains the given value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "articleNumber",
            "in": "query",
            "description": "Search value for finding all articles where the article number contains the given value",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LabelerArticle"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LabelerArticle"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LabelerArticle"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "LabelerArticle"
        ],
        "summary": "Creates a new article with labeler data.",
        "operationId": "LabelerArticleV1_WriteLabelerArticle",
        "requestBody": {
          "description": "The labeler article data.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LabelerArticle"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LabelerArticle"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LabelerArticle"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LabelerArticle"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LabelerArticle"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelerArticle"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelerArticle"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v1/label-layouts": {
      "get": {
        "tags": [
          "LabelLayout"
        ],
        "summary": "Gets label layouts",
        "operationId": "LabelLayoutV1_GetLabelLayout",
        "parameters": [
          {
            "name": "labelProjectName",
            "in": "query",
            "description": "Filters label layouts for a specific label project that matches the specified label project name. \r\nIf label project name is empty and layout number is not empty, then all layouts with the specified layout number will be returned regardless of the label project assignment.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layoutNumber",
            "in": "query",
            "description": "Filters label layouts where the layout number equals the specified value. If layout number is empty and label project name is not empty, then all layouts for the specified label project will be returned. \r\nIf layout number is not empty, the value must be between 1 and 999.",
            "schema": {
              "maximum": 999,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LabelLayouts"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LabelLayouts"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LabelLayouts"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "LabelLayout"
        ],
        "summary": "Creates a new label layout.",
        "operationId": "LabelLayoutV1_WriteLabelLayout",
        "requestBody": {
          "description": "The label layout data.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LabelLayouts"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LabelLayouts"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LabelLayouts"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LabelLayouts"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LabelLayouts"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelLayouts"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelLayouts"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v1/label-layouts/{projectName}/{layoutNumber}": {
      "get": {
        "tags": [
          "LabelLayout"
        ],
        "summary": "Gets a label layout by project name and layout number.",
        "operationId": "LabelLayoutV1_GetLabelLayoutByProjectAndNumber",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layoutNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LabelLayouts"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelLayouts"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelLayouts"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v1/label-layouts/{layoutNumber}": {
      "get": {
        "tags": [
          "LabelLayout"
        ],
        "summary": "Gets a label layout by number, with no project assignment.",
        "operationId": "LabelLayoutV1_GetLabelLayoutByNumber",
        "parameters": [
          {
            "name": "layoutNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LabelLayouts"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelLayouts"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelLayouts"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "LabelLayout"
        ],
        "summary": "Modifies an existing label layout with updated data",
        "operationId": "LabelLayoutV1_UpdateLabelLayout",
        "parameters": [
          {
            "name": "projectName",
            "in": "query",
            "description": "The label project name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layoutNumber",
            "in": "path",
            "description": "The label layout number.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The label layout data.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LabelLayouts"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LabelLayouts"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LabelLayouts"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LabelLayouts"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v1/label-preview": {
      "get": {
        "tags": [
          "LabelPreview"
        ],
        "summary": "Gets the label preview image as byte data for the specified layout and the data available in BRAIN2.",
        "operationId": "LabelPreviewV1_ReadLabelPreviewImageAsBytes",
        "parameters": [
          {
            "name": "layoutNumber",
            "in": "query",
            "description": "Number of the layout for the label preview",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "articleNumber",
            "in": "query",
            "description": "Number of the article used in the label preview",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labelProjectName",
            "in": "query",
            "description": "Name of the layout project used in the label preview. If empty, only label layouts without a project assignment will be considered.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerNumber",
            "in": "query",
            "description": "Number of the customer used in the label preview",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceName",
            "in": "query",
            "description": "Name of the device used in the label preview",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LabelPreviewResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelPreviewResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelPreviewResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LabelPreview"
        ],
        "description": "\"Gets the label preview image as byte data for the specified layout and the data in the request body.\" <br />\r\n\"Since the data for the layout preview could exceed the maximum size of a GET URL,\r\nthis request is implemented as POST instead of GET.\"",
        "operationId": "LabelPreviewV1_ReadLabelPreviewImageAsBytesFromUserParameters",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LabelPreviewDataCollection"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LabelPreviewDataCollection"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LabelPreviewDataCollection"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LabelPreviewDataCollection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LabelPreviewResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelPreviewResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelPreviewResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/oee-records": {
      "get": {
        "tags": [
          "OeeRecords"
        ],
        "summary": "Gets all OEE records",
        "operationId": "OeeRecordsV1_GetOeeValuesForProductionLine",
        "parameters": [
          {
            "name": "articleNumber",
            "in": "query",
            "description": "Filter by article number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productionLineName",
            "in": "query",
            "description": "Filter by production line name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "masterDeviceName",
            "in": "query",
            "description": "Filter by device name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "articleName",
            "in": "query",
            "description": "Filter by article name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Filter by date. The start of the requested time frame.\r\nFormat: yyyy-MM-ddTHH:mm:ss",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Filter by date. The end of the requested time frame.\r\nFormat: yyyy-MM-ddTHH:mm:ss",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Offset for pagination",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "Max. number of returned records",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1000
            },
            "example": 1000
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort expression",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OeeRecord"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OeeRecord"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OeeRecord"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/package-records": {
      "get": {
        "tags": [
          "PackageRecords"
        ],
        "summary": "Gets all package records",
        "operationId": "PackageRecordsV1_GetPackageRecords",
        "parameters": [
          {
            "name": "articleNumber",
            "in": "query",
            "description": "Filter by article number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "articleName",
            "in": "query",
            "description": "Filter by article name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batchNumber",
            "in": "query",
            "description": "Filter by batch number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commonNumber1",
            "in": "query",
            "description": "Filter by 1st common number",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "commonNumber2",
            "in": "query",
            "description": "Filter by 2nd common number",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "commonText1",
            "in": "query",
            "description": "Filter by 1st common text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commonText2",
            "in": "query",
            "description": "Filter by 2nd common text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceName",
            "in": "query",
            "description": "Filter by device name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceMachineNumber",
            "in": "query",
            "description": "Filter by device machine number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "query",
            "description": "Filter by identity. Get all records with identities that are greater or equal to this identity.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Filter by date. Get all records with timestamps greater than or equal to this date.\r\nFormat: yyyy-MM-ddTHH:mm:ss",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Filter by date. Get all records with timestamps less than or equal to this date.\r\nFormat: yyyy-MM-ddTHH:mm:ss",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "startUseByDate",
            "in": "query",
            "description": "Filter by use-by date. Get all records with a use-by date greater than or equal to this date.\r\nFormat: yyyy-MM-ddTHH:mm:ss",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endUseByDate",
            "in": "query",
            "description": "Filter by use-by date. Get all records with a use-by date less than or equal to this date.\r\nFormat: yyyy-MM-ddTHH:mm:ss",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "errorFlag",
            "in": "query",
            "description": "Filter by error flag",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "errorType",
            "in": "query",
            "description": "Filter by error type",
            "schema": {
              "$ref": "#/components/schemas/DeviceErrorType"
            }
          },
          {
            "name": "packageType",
            "in": "query",
            "description": "Filter by package type",
            "schema": {
              "$ref": "#/components/schemas/PackageType"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Offset for pagination",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "Max. number of returned records",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1000
            },
            "example": 1000
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort expression",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageRecord"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageRecord"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PackageRecord"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/production-lines": {
      "get": {
        "tags": [
          "ProductionLines"
        ],
        "summary": "Gets all production lines",
        "operationId": "ProductionLinesV1_GetProductionLines",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductionLine"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductionLine"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductionLine"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sampletest-statistics": {
      "get": {
        "tags": [
          "SampleTestStatistics"
        ],
        "summary": "Gets all Sampletest statistics records",
        "operationId": "SampleTestStatisticsV1_GetSampleTestStatistic",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Offset for pagination",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "Max. number of returned records",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1000
            },
            "example": 1000
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort expression",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "articleName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "articleNumber",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batchNumber",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SampleTestStatistics"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SampleTestStatistics"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SampleTestStatistics"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/statistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Gets all statistic",
        "operationId": "StatisticsV1_GetStatistics",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Filter by date. Get all records with timestamps greater than or equal to this date.\r\nFormat: yyyy-MM-ddThh:mm:ss",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Filter by date. Get all records with timestamps less than or equal to this date.\r\nFormat: yyyy-MM-ddThh:mm:ss",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "deviceName",
            "in": "query",
            "description": "Filter by device name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceMachineNumber",
            "in": "query",
            "description": "Filter by device machine number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "articleNumber",
            "in": "query",
            "description": "Filter by article number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "articleName",
            "in": "query",
            "description": "Filter by article name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batchNumber",
            "in": "query",
            "description": "Filter by batch number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerNumber",
            "in": "query",
            "description": "Filter by customer number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Offset for pagination",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "Max. number of returned records",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1000
            },
            "example": 1000
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort expression",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Statistics"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Statistics"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Statistics"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/token": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Gets a JSON Web Token for the given user",
        "operationId": "TokenV1_Token",
        "requestBody": {
          "description": "The request",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AlternateLabelCriteriaType": {
        "enum": [
          "withoutPrintOut",
          "onlyForSpecialPrice",
          "dependingOnWeightClass",
          "alwaysExternal",
          "changeWithEveryLabel",
          "atPaperEnd",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "AlternateLabelDataOutputChannelType": {
        "enum": [
          "internal",
          "channelA",
          "channelB",
          "channelC",
          "channelD",
          "channelE",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "AuthenticationMode": {
        "enum": [
          "credentials",
          "cookie"
        ],
        "type": "string",
        "description": "The authentication mode indicates if the user should be authenticated by using \r\nits credentials or its session cookie from the WebServer."
      },
      "BasePriceDivisionType": {
        "enum": [
          "perUnit",
          "per100G",
          "perHalfLB",
          "perQuarterLB",
          "perLB",
          "perKG",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "BaseTextField": {
        "type": "object",
        "properties": {
          "number": {
            "maximum": 999999999,
            "minimum": -1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BizerbaCodePage": {
        "enum": [
          "westernEurope",
          "cyrillic",
          "easternEurope",
          "greek",
          "east2",
          "unicode",
          "undefined"
        ],
        "type": "string"
      },
      "CodeFields": {
        "type": "object",
        "properties": {
          "codeNumber1": {
            "type": "integer",
            "description": "Gets or sets the codenumber1",
            "format": "int32"
          },
          "codeNumber2": {
            "type": "integer",
            "description": "Gets or sets the codenumber2",
            "format": "int32"
          },
          "codeNumber3": {
            "type": "integer",
            "description": "Gets or sets the codenumber3",
            "format": "int32"
          },
          "codeNumber4": {
            "type": "integer",
            "description": "Gets or sets the codenumber4",
            "format": "int32"
          },
          "codeNumber5": {
            "type": "integer",
            "description": "Gets or sets the codenumber5",
            "format": "int32"
          },
          "codeNumber6": {
            "type": "integer",
            "description": "Gets or sets the codenumber6",
            "format": "int32"
          },
          "codeNumber7": {
            "type": "integer",
            "description": "Gets or sets the codenumber7",
            "format": "int32"
          },
          "codeSubstring1": {
            "type": "string",
            "description": "Gets or sets the codesubstring1",
            "nullable": true,
            "example": "Enter only numerical values for the code substrings"
          },
          "codeSubstring2": {
            "type": "string",
            "description": "Gets or sets the codesubstring2",
            "nullable": true,
            "example": ""
          },
          "codeSubstring3": {
            "type": "string",
            "description": "Gets or sets the codesubstring3",
            "nullable": true,
            "example": ""
          },
          "codeSubstring4": {
            "type": "string",
            "description": "Gets or sets the codesubstring4",
            "nullable": true,
            "example": ""
          },
          "codeSubstring5": {
            "type": "string",
            "description": "Gets or sets the codesubstring5",
            "nullable": true,
            "example": ""
          },
          "codeSubstring6": {
            "type": "string",
            "description": "Gets or sets the codesubstring6",
            "nullable": true,
            "example": ""
          },
          "codeSubstring7": {
            "type": "string",
            "description": "Gets or sets the codestring7",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false,
        "description": "Class containing all the code field members"
      },
      "CodeFlags": {
        "type": "object",
        "properties": {
          "plainText": {
            "type": "boolean",
            "description": "The PlainText"
          },
          "separateFirstDigit": {
            "type": "boolean",
            "description": "The SeparateFirstDigit"
          },
          "insertCheckDigit": {
            "type": "boolean",
            "description": "The InsertCheckDigit"
          },
          "restAreaLeft": {
            "type": "boolean",
            "description": "The RestAreaLeft"
          },
          "restAreaTop": {
            "type": "boolean",
            "description": "The RestAreaTop"
          },
          "restAreaRight": {
            "type": "boolean",
            "description": "The RestAreaRight"
          },
          "restAreaBottom": {
            "type": "boolean",
            "description": "The RestAreaBottom"
          },
          "timberAboveCode": {
            "type": "boolean",
            "description": "The TimberAboveCode"
          },
          "switchBlock6and2": {
            "type": "boolean",
            "description": "The SwitchBlock6and2"
          },
          "stacked": {
            "type": "boolean",
            "description": "The Stacked"
          },
          "optimization": {
            "type": "boolean",
            "description": "The Optimization"
          }
        },
        "additionalProperties": false,
        "description": "Class containing all flags members"
      },
      "CodeType": {
        "enum": [
          "eaN13Code",
          "eaN8Code",
          "gS1128",
          "code128",
          "code25Int",
          "code39",
          "upcaCode",
          "itF6141618",
          "eanD3Code",
          "pdF417",
          "pdF417WithAI",
          "gS1DataBarOmni",
          "gS1DataBarExpanded",
          "compositeCComponents",
          "dataMatrix",
          "maxiCode",
          "eanAddOn2Digits",
          "eanAddOn5Digits",
          "qrCode",
          "gS1Remote",
          "codabar",
          "gS1Datamatrix",
          "aztec",
          "gS1Aztec",
          "gS1QRCode",
          "epC96",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "CorrectionLevelType": {
        "enum": [
          "low",
          "medium",
          "quality",
          "high",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "DateFields": {
        "type": "object",
        "properties": {
          "dateText1": {
            "type": "string",
            "description": "Gets or sets the datetext1",
            "nullable": true,
            "example": ""
          },
          "dateText2": {
            "type": "string",
            "description": "Gets or sets the datetext2",
            "nullable": true,
            "example": ""
          },
          "dateText3": {
            "type": "string",
            "description": "Gets or sets the datetext3",
            "nullable": true,
            "example": ""
          },
          "shelfLifeDays1": {
            "type": "integer",
            "description": "Gets or sets the shelf life days1",
            "format": "int32"
          },
          "shelfLifeDays2": {
            "type": "integer",
            "description": "Gets or sets the shelf life days2",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Class containing all the dateFields members"
      },
      "DatePrintoutType": {
        "enum": [
          "noPrintout",
          "datePrintedWithConfiguredFormat",
          "dayOfTheYearFormat",
          "codedDate",
          "withPlusDays",
          "dayOfTheYear00Format",
          "undefined",
          "fromWeightClass"
        ],
        "type": "string",
        "description": ""
      },
      "DescenderType": {
        "enum": [
          "noOverOrUnderLengthSuppression",
          "onlySuppressionOfOverLength",
          "onlySuppressionOfUnderlength",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "Device": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the device",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the device",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A device"
      },
      "DeviceErrorType": {
        "enum": [
          "gx",
          "ix",
          "none"
        ],
        "type": "string",
        "description": "The type of error"
      },
      "DimValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "decimalPlaces": {
            "type": "integer",
            "format": "int32"
          },
          "unit": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FillingType": {
        "enum": [
          "noFilling",
          "invert",
          "greyBackground",
          "greyFont",
          "strikethrough",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "FrameType": {
        "enum": [
          "noFrame",
          "cornerFrame",
          "roundFrame",
          "doubleFrame",
          "thickFrame",
          "shading",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "GeneralNumbers": {
        "type": "object",
        "properties": {
          "generalNumber1": {
            "type": "integer",
            "description": "Gets or sets the generalnumber1",
            "format": "int32"
          },
          "generalNumber2": {
            "type": "integer",
            "description": "Gets or sets the generalnumber2",
            "format": "int32"
          },
          "generalNumber3": {
            "type": "integer",
            "description": "Gets or sets the generalnumber3",
            "format": "int32"
          },
          "generalNumber4": {
            "type": "integer",
            "description": "Gets or sets the generalnumber4",
            "format": "int32"
          },
          "generalNumber5": {
            "type": "integer",
            "description": "Gets or sets the generalnumber5",
            "format": "int32"
          },
          "generalNumber6": {
            "type": "integer",
            "description": "Gets or sets the generalnumber6",
            "format": "int32"
          },
          "generalNumber7": {
            "type": "integer",
            "description": "Gets or sets the generalnumber7",
            "format": "int32"
          },
          "generalNumber8": {
            "type": "integer",
            "description": "Gets or sets the generalnumber8",
            "format": "int32"
          },
          "generalNumber9": {
            "type": "integer",
            "description": "Gets or sets the generalnumber9",
            "format": "int32"
          },
          "generalNumber10": {
            "type": "integer",
            "description": "Gets or sets the generalnumber10",
            "format": "int32"
          },
          "generalNumber11": {
            "type": "integer",
            "description": "Gets or sets the generalnumber11",
            "format": "int32"
          },
          "generalNumber12": {
            "type": "integer",
            "description": "Gets or sets the generalnumber12",
            "format": "int32"
          },
          "generalNumber13": {
            "type": "integer",
            "description": "Gets or sets the generalnumber13",
            "format": "int32"
          },
          "generalNumber14": {
            "type": "integer",
            "description": "Gets or sets the General number14",
            "format": "int32"
          },
          "generalNumber15": {
            "type": "integer",
            "description": "Gets or sets the generalnumber15",
            "format": "int32"
          },
          "generalNumber16": {
            "type": "integer",
            "description": "Gets or sets the generalnumber16",
            "format": "int32"
          },
          "generalNumber17": {
            "type": "integer",
            "description": "Gets or sets the generalnumber17",
            "format": "int32"
          },
          "generalNumber18": {
            "type": "integer",
            "description": "Gets or sets the generalnumber18",
            "format": "int32"
          },
          "generalNumber19": {
            "type": "integer",
            "description": "Gets or sets the generalnumber19",
            "format": "int32"
          },
          "generalNumber20": {
            "type": "integer",
            "description": "Gets or sets the generalnumber20",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Class containing all the General numbers members"
      },
      "GeneralTexts": {
        "type": "object",
        "properties": {
          "generalText1": {
            "type": "string",
            "description": "Gets or sets the text of the generaltext1",
            "nullable": true,
            "example": ""
          },
          "generalText2": {
            "type": "string",
            "description": "Gets or sets the text of the generaltext1",
            "nullable": true,
            "example": ""
          },
          "generalText3": {
            "type": "string",
            "description": "Gets or sets the text of the text3",
            "nullable": true,
            "example": ""
          },
          "generalText4": {
            "type": "string",
            "description": "Gets or sets the text of the text4",
            "nullable": true,
            "example": ""
          },
          "generalText5": {
            "type": "string",
            "description": "Gets or sets the text of the text5",
            "nullable": true,
            "example": ""
          },
          "generalText6": {
            "type": "string",
            "description": "Gets or sets the text of the text6",
            "nullable": true,
            "example": ""
          },
          "generalText7": {
            "type": "string",
            "description": "Gets or sets the text of the text7",
            "nullable": true,
            "example": ""
          },
          "generalText8": {
            "type": "string",
            "description": "Gets or sets the text of the text8",
            "nullable": true,
            "example": ""
          },
          "generalText9": {
            "type": "string",
            "description": "Gets or sets the text of the text9",
            "nullable": true,
            "example": ""
          },
          "generalText10": {
            "type": "string",
            "description": "Gets or sets the text of the text10",
            "nullable": true,
            "example": ""
          },
          "generalText11": {
            "type": "string",
            "description": "Gets or sets the text of the text11",
            "nullable": true,
            "example": ""
          },
          "generalText12": {
            "type": "string",
            "description": "Gets or sets the text of the text12",
            "nullable": true,
            "example": ""
          },
          "generalText13": {
            "type": "string",
            "description": "Gets or sets the text of the text13",
            "nullable": true,
            "example": ""
          },
          "generalText14": {
            "type": "string",
            "description": "Gets or sets the text of the text14",
            "nullable": true,
            "example": ""
          },
          "generalText15": {
            "type": "string",
            "description": "Gets or sets the Text of the text15",
            "nullable": true,
            "example": ""
          },
          "generalText16": {
            "type": "string",
            "description": "Gets or sets the text of the text16",
            "nullable": true,
            "example": ""
          },
          "generalText17": {
            "type": "string",
            "description": "Gets or sets the text of the text17",
            "nullable": true,
            "example": ""
          },
          "generalText18": {
            "type": "string",
            "description": "Gets or sets the text of the text18",
            "nullable": true,
            "example": ""
          },
          "generalText19": {
            "type": "string",
            "description": "Gets or sets the text of the text19",
            "nullable": true,
            "example": ""
          },
          "generalText20": {
            "type": "string",
            "description": "Gets or sets the text of the text20",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false,
        "description": "Class containing all the textfields members"
      },
      "GraphicFields": {
        "type": "object",
        "properties": {
          "logo1": {
            "type": "integer",
            "description": "Gets or sets the logo1",
            "format": "int32"
          },
          "logo2": {
            "type": "integer",
            "description": "Gets or sets the logo2",
            "format": "int32"
          },
          "logo3": {
            "type": "integer",
            "description": "Gets or sets the logo3",
            "format": "int32"
          },
          "logo4": {
            "type": "integer",
            "description": "Gets or sets the logo4",
            "format": "int32"
          },
          "logo5": {
            "type": "integer",
            "description": "Gets or sets the logo5",
            "format": "int32"
          },
          "logo6": {
            "type": "integer",
            "description": "Gets or sets the logo6",
            "format": "int32"
          },
          "logo7": {
            "type": "integer",
            "description": "Gets or sets the logo7",
            "format": "int32"
          },
          "logo8": {
            "type": "integer",
            "description": "Gets or sets the logo8",
            "format": "int32"
          },
          "logo9": {
            "type": "integer",
            "description": "Gets or sets the logo9",
            "format": "int32"
          },
          "logo10": {
            "type": "integer",
            "description": "Gets or sets the logo10",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Class containing all the GraphicFields members"
      },
      "GxCurrencyType": {
        "enum": [
          "dem",
          "frf",
          "bef",
          "nlg",
          "luf",
          "beF0",
          "eur",
          "mtl",
          "gbp",
          "iep",
          "dkk",
          "sek",
          "fim",
          "nok",
          "isk",
          "itl",
          "chf",
          "esp",
          "pte",
          "ron",
          "try",
          "uzs",
          "kzt",
          "all",
          "mkd",
          "mdl",
          "bam",
          "eek",
          "rub",
          "uah",
          "gel",
          "ats",
          "czk",
          "pln",
          "grd",
          "trl",
          "bgn",
          "rol",
          "hrk",
          "sit",
          "skk",
          "huf",
          "cyp",
          "yum",
          "ltl",
          "rur",
          "lvl",
          "usd",
          "cad",
          "ars",
          "ecs",
          "pyg",
          "crc",
          "mxn",
          "gtq",
          "veb",
          "pen",
          "brl",
          "clp",
          "svc",
          "cop",
          "dop",
          "pab",
          "zar",
          "bwp",
          "ngn",
          "ghc",
          "egp",
          "zwd",
          "dzd",
          "mad",
          "lyd",
          "mur",
          "tnd",
          "aoa",
          "sgd",
          "ind",
          "kwd",
          "jod",
          "sar",
          "lbp",
          "twd",
          "cny",
          "hkd",
          "krw",
          "irr",
          "aed",
          "iqd",
          "ils",
          "syp",
          "qar",
          "bhd",
          "aud",
          "nzd",
          "pgk",
          "jpy",
          "myr",
          "xpf",
          "php",
          "idn",
          "vnm",
          "azn",
          "tjs",
          "rsd",
          "neU0",
          "neU1",
          "neU2",
          "neU3",
          "bgl",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "HorizontalAlignmentType": {
        "enum": [
          "left",
          "center",
          "right",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "IntensityType": {
        "enum": [
          "black",
          "darkGray",
          "gray",
          "lightGray",
          "white",
          "interleave",
          "hatch",
          "gray10",
          "poundKey",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "LabelerArticle": {
        "required": [
          "isEnabledForLabelers",
          "number",
          "weightUnit"
        ],
        "type": "object",
        "properties": {
          "isEnabledForLabelers": {
            "type": "boolean",
            "description": "Determines whether the article is configured for the labelers."
          },
          "weightUnit": {
            "type": "string",
            "description": "Gets or sets the unit of measure (kg or lb) for all weight values. (e.g. fixed weight, tare weight, etc)"
          },
          "weightDecimalPlaces": {
            "type": "integer",
            "description": "Gets or sets the number of decimal places for all weight values. (e.g. fixed weight, tare weight, etc)",
            "format": "int32"
          },
          "articlePLU": {
            "$ref": "#/components/schemas/LabelerArticlePlu"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description.",
            "nullable": true
          },
          "number": {
            "type": "string",
            "description": "Gets or sets the number."
          },
          "gxPriceCurrencyCode": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the currency type for all price values. If value is changed, this will possibily affect other enabled applications of the article (e.g. Labeler, PortionControl, and StockControl). \r\nPriceUnit does not change iS30/iS50 application.",
            "nullable": true
          },
          "gxPriceDecimalPlaces": {
            "type": "integer",
            "description": "Gets the number of decimal place for all price values based off the price unit. PriceDecimalPlaces is not used for iS30/iS50 applications.",
            "format": "int32"
          },
          "active": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this Article is active."
          },
          "approved": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this Article is approved for Quality Gate."
          },
          "additional1": {
            "type": "string",
            "description": "Gets or sets the additional1.",
            "nullable": true
          },
          "additional2": {
            "type": "string",
            "description": "Gets or sets the additional2.",
            "nullable": true
          },
          "commonText1": {
            "type": "string",
            "description": "Gets or sets the common text1.",
            "nullable": true,
            "example": "True"
          },
          "commonText2": {
            "type": "string",
            "description": "Gets or sets the common text2.",
            "nullable": true
          },
          "commonNumber1": {
            "type": "integer",
            "description": "Gets or sets the common number1.",
            "format": "int32"
          },
          "commonNumber2": {
            "type": "integer",
            "description": "Gets or sets the common number2.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Contains PLU data for a labeler article"
      },
      "LabelerArticleJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelerArticleOperation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LabelerArticleOperation": {
        "type": "object",
        "properties": {
          "value": {
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LabelerArticlePlu": {
        "type": "object",
        "properties": {
          "dateTextField1": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "dateTextField2": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "dateTextField3": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField1": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField2": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField3": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField4": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField5": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField6": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField7": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField8": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField9": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField10": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField11": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField12": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField13": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField14": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField15": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField16": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField17": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField18": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField19": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "textField20": {
            "$ref": "#/components/schemas/BaseTextField"
          },
          "logoField1": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the logo field1.",
            "format": "int32"
          },
          "logoField2": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the logo field2.",
            "format": "int32"
          },
          "logoField3": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the logo field3.",
            "format": "int32"
          },
          "logoField4": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the logo field4.",
            "format": "int32"
          },
          "logoField5": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the logo field5.",
            "format": "int32"
          },
          "logoField6": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the logo field6.",
            "format": "int32"
          },
          "logoField7": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the logo field7.",
            "format": "int32"
          },
          "logoField8": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the logo field8.",
            "format": "int32"
          },
          "logoField9": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the logo field9.",
            "format": "int32"
          },
          "logoField10": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the logo field10.",
            "format": "int32"
          },
          "codeField1": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the code field1.",
            "format": "int32"
          },
          "codeField2": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the code field2.",
            "format": "int32"
          },
          "codeField3": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the code field3.",
            "format": "int32"
          },
          "codeField4": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the code field4.",
            "format": "int32"
          },
          "codeField5": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the code field5.",
            "format": "int32"
          },
          "codeField6": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the code field6.",
            "format": "int32"
          },
          "codeField7": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the code field7.",
            "format": "int32"
          },
          "codeString1": {
            "type": "string",
            "description": "Gets or sets the code string1.",
            "nullable": true
          },
          "codeString2": {
            "type": "string",
            "description": "Gets or sets the code string2.",
            "nullable": true
          },
          "codeString3": {
            "type": "string",
            "description": "Gets or sets the code string3.",
            "nullable": true
          },
          "codeString4": {
            "type": "string",
            "description": "Gets or sets the code string4.",
            "nullable": true
          },
          "codeString5": {
            "type": "string",
            "description": "Gets or sets the code string5.",
            "nullable": true
          },
          "codeString6": {
            "type": "string",
            "description": "Gets or sets the code string6.",
            "nullable": true
          },
          "codeString7": {
            "type": "string",
            "description": "Gets or sets the code string7.",
            "nullable": true
          },
          "generalNumber1": {
            "type": "integer",
            "description": "Gets or sets the general number1.",
            "format": "int32"
          },
          "generalNumber2": {
            "type": "integer",
            "description": "Gets or sets the general number2.",
            "format": "int32"
          },
          "generalNumber3": {
            "type": "integer",
            "description": "Gets or sets the general number3.",
            "format": "int32"
          },
          "generalNumber4": {
            "type": "integer",
            "description": "Gets or sets the general number4.",
            "format": "int32"
          },
          "generalNumber5": {
            "type": "integer",
            "description": "Gets or sets the general number5.",
            "format": "int32"
          },
          "generalNumber6": {
            "type": "integer",
            "description": "Gets or sets the general number6.",
            "format": "int32"
          },
          "generalNumber7": {
            "type": "integer",
            "description": "Gets or sets the general number7.",
            "format": "int32"
          },
          "generalNumber8": {
            "type": "integer",
            "description": "Gets or sets the general number8.",
            "format": "int32"
          },
          "generalNumber9": {
            "type": "integer",
            "description": "Gets or sets the general number9.",
            "format": "int32"
          },
          "generalNumber10": {
            "type": "integer",
            "description": "Gets or sets the general number10.",
            "format": "int32"
          },
          "generalNumber11": {
            "type": "integer",
            "description": "Gets or sets the general number11.",
            "format": "int32"
          },
          "generalNumber12": {
            "type": "integer",
            "description": "Gets or sets the general number12.",
            "format": "int32"
          },
          "generalNumber13": {
            "type": "integer",
            "description": "Gets or sets the general number13.",
            "format": "int32"
          },
          "generalNumber14": {
            "type": "integer",
            "description": "Gets or sets the general number14.",
            "format": "int32"
          },
          "generalNumber15": {
            "type": "integer",
            "description": "Gets or sets the general number15.",
            "format": "int32"
          },
          "generalNumber16": {
            "type": "integer",
            "description": "Gets or sets the general number16.",
            "format": "int32"
          },
          "generalNumber17": {
            "type": "integer",
            "description": "Gets or sets the general number17.",
            "format": "int32"
          },
          "generalNumber18": {
            "type": "integer",
            "description": "Gets or sets the general number18.",
            "format": "int32"
          },
          "generalNumber19": {
            "type": "integer",
            "description": "Gets or sets the general number19.",
            "format": "int32"
          },
          "generalNumber20": {
            "type": "integer",
            "description": "Gets or sets the general number20.",
            "format": "int32"
          },
          "simpleText1": {
            "type": "string",
            "description": "Gets or sets the simple text1.",
            "nullable": true
          },
          "simpleText2": {
            "type": "string",
            "description": "Gets or sets the simple text2.",
            "nullable": true
          },
          "simpleText3": {
            "type": "string",
            "description": "Gets or sets the simple text3.",
            "nullable": true
          },
          "simpleText4": {
            "type": "string",
            "description": "Gets or sets the simple text4.",
            "nullable": true
          },
          "simpleText5": {
            "type": "string",
            "description": "Gets or sets the simple text5.",
            "nullable": true
          },
          "simpleText6": {
            "type": "string",
            "description": "Gets or sets the simple text6.",
            "nullable": true
          },
          "simpleText7": {
            "type": "string",
            "description": "Gets or sets the simple text7.",
            "nullable": true
          },
          "simpleText8": {
            "type": "string",
            "description": "Gets or sets the simple text8.",
            "nullable": true
          },
          "simpleText9": {
            "type": "string",
            "description": "Gets or sets the simple text9.",
            "nullable": true
          },
          "simpleText10": {
            "type": "string",
            "description": "Gets or sets the simple text10.",
            "nullable": true
          },
          "simpleText11": {
            "type": "string",
            "description": "Gets or sets the simple text11.",
            "nullable": true
          },
          "simpleText12": {
            "type": "string",
            "description": "Gets or sets the simple text12.",
            "nullable": true
          },
          "simpleText13": {
            "type": "string",
            "description": "Gets or sets the simple text13.",
            "nullable": true
          },
          "simpleText14": {
            "type": "string",
            "description": "Gets or sets the simple text14.",
            "nullable": true
          },
          "simpleText15": {
            "type": "string",
            "description": "Gets or sets the simple text15.",
            "nullable": true
          },
          "simpleText16": {
            "type": "string",
            "description": "Gets or sets the simple text16.",
            "nullable": true
          },
          "simpleText17": {
            "type": "string",
            "description": "Gets or sets the simple text17.",
            "nullable": true
          },
          "simpleText18": {
            "type": "string",
            "description": "Gets or sets the simple text18.",
            "nullable": true
          },
          "simpleText19": {
            "type": "string",
            "description": "Gets or sets the simple text19.",
            "nullable": true
          },
          "simpleText20": {
            "type": "string",
            "description": "Gets or sets the simple text20.",
            "nullable": true
          },
          "simpleText21": {
            "type": "string",
            "description": "Gets or sets the simple text21.",
            "nullable": true
          },
          "simpleText22": {
            "type": "string",
            "description": "Gets or sets the simple text22.",
            "nullable": true
          },
          "simpleText23": {
            "type": "string",
            "description": "Gets or sets the simple text23.",
            "nullable": true
          },
          "simpleText24": {
            "type": "string",
            "description": "Gets or sets the simple text24.",
            "nullable": true
          },
          "simpleText25": {
            "type": "string",
            "description": "Gets or sets the simple text25.",
            "nullable": true
          },
          "simpleText26": {
            "type": "string",
            "description": "Gets or sets the simple text26.",
            "nullable": true
          },
          "simpleText27": {
            "type": "string",
            "description": "Gets or sets the simple text27.",
            "nullable": true
          },
          "simpleText28": {
            "type": "string",
            "description": "Gets or sets the simple text28.",
            "nullable": true
          },
          "simpleText29": {
            "type": "string",
            "description": "Gets or sets the simple text29.",
            "nullable": true
          },
          "simpleText30": {
            "type": "string",
            "description": "Gets or sets the simple text30.",
            "nullable": true
          },
          "total1PreselectedValueForPiece": {
            "type": "integer",
            "description": "Gets or sets the total1 preselected value for piece.",
            "format": "int32"
          },
          "total2PreselectedValueForPiece": {
            "type": "integer",
            "description": "Gets or sets the total2 preselected value for piece.",
            "format": "int32"
          },
          "total3PreselectedValueForPiece": {
            "type": "integer",
            "description": "Gets or sets the total3 preselected value for piece.",
            "format": "int32"
          },
          "printChannelInternalConfiguration": {
            "$ref": "#/components/schemas/PrintChannelControlType"
          },
          "printChannelAConfiguration": {
            "$ref": "#/components/schemas/PrintChannelControlType"
          },
          "printChannelBConfiguration": {
            "$ref": "#/components/schemas/PrintChannelControlType"
          },
          "printChannelCConfiguration": {
            "$ref": "#/components/schemas/PrintChannelControlType"
          },
          "printChannelDConfiguration": {
            "$ref": "#/components/schemas/PrintChannelControlType"
          },
          "printChannelEConfiguration": {
            "$ref": "#/components/schemas/PrintChannelControlType"
          },
          "printChannelFConfiguration": {
            "$ref": "#/components/schemas/PrintChannelControlType"
          },
          "printChannelGConfiguration": {
            "$ref": "#/components/schemas/PrintChannelControlType"
          },
          "printChannelHConfiguration": {
            "$ref": "#/components/schemas/PrintChannelControlType"
          },
          "printChannelIConfiguration": {
            "$ref": "#/components/schemas/PrintChannelControlType"
          },
          "printChannelJConfiguration": {
            "$ref": "#/components/schemas/PrintChannelControlType"
          },
          "printChannelKConfiguration": {
            "$ref": "#/components/schemas/PrintChannelControlType"
          },
          "unitPriceValue": {
            "type": "number",
            "description": "Gets or sets the unit price.",
            "format": "double"
          },
          "basePriceDivision": {
            "$ref": "#/components/schemas/BasePriceDivisionType"
          },
          "specialUnitPriceValue": {
            "type": "number",
            "description": "Gets or sets the special unit price.",
            "format": "double"
          },
          "recalculateUnitPriceType": {
            "$ref": "#/components/schemas/RecalculateUnitPriceType"
          },
          "shelfLifeDays1": {
            "type": "integer",
            "description": "Gets or sets the shelf life days1.",
            "format": "int32"
          },
          "shelfLifeDays2": {
            "type": "integer",
            "description": "Gets or sets the shelf life days2.",
            "format": "int32"
          },
          "date1": {
            "$ref": "#/components/schemas/DatePrintoutType"
          },
          "date2": {
            "$ref": "#/components/schemas/DatePrintoutType"
          },
          "date3": {
            "$ref": "#/components/schemas/DatePrintoutType"
          },
          "time1PrintConfiguration": {
            "$ref": "#/components/schemas/TimePrintConfigurationType"
          },
          "time2PrintConfiguration": {
            "$ref": "#/components/schemas/TimePrintConfigurationType"
          },
          "tareWeightValue": {
            "type": "number",
            "description": "Gets or sets the tare weight. NOTE: For the unit of measure and decimal places see DefaultUnit and DefaultDecimalPlace.",
            "format": "double"
          },
          "fixedWeightValue": {
            "type": "number",
            "description": "Gets or sets the fixed weight. NOTE: For the unit of measure and decimal places see DefaultUnit and DefaultDecimalPlaces.",
            "format": "double"
          },
          "minWeightValue": {
            "type": "number",
            "description": "Gets or sets the minimum weight. NOTE: For the unit of measure and decimal places see DefaultUnit and DefaultDecimalPlaces.",
            "format": "double"
          },
          "maxWeightValue": {
            "type": "number",
            "description": "Gets or sets the maximum weight. NOTE: For the unit of measure and decimal places see DefaultUnit and DefaultDecimalPlaces.",
            "format": "double"
          },
          "scannerCompulsory": {
            "$ref": "#/components/schemas/ScannerCompulsoryType"
          },
          "scanningRule": {
            "type": "integer",
            "description": "Gets or sets the scanning rule.",
            "format": "int32"
          },
          "labelScanningRule": {
            "type": "integer",
            "description": "Gets or sets the label scanning rule.",
            "format": "int32"
          },
          "productGroupNumber": {
            "type": "integer",
            "description": "Gets or sets the product group number.",
            "format": "int32"
          },
          "tendencyControl": {
            "type": "integer",
            "description": "Gets or sets the tendency control.",
            "format": "int32"
          },
          "staticText": {
            "type": "integer",
            "description": "Gets or sets the static text.",
            "format": "int32"
          },
          "automaticLabelParameter": {
            "type": "integer",
            "description": "Gets or sets the automatic label parameter.",
            "format": "int32"
          },
          "labelParameter": {
            "type": "integer",
            "description": "Gets or sets the label parameter.",
            "format": "int32"
          },
          "piecesPerPackage": {
            "type": "integer",
            "description": "Gets or sets the pieces per package.",
            "format": "int32"
          },
          "numberOfSuccessiveLabels": {
            "type": "integer",
            "description": "Gets or sets the number of successive labels.",
            "format": "int32"
          },
          "numberOfLabelCopies": {
            "type": "integer",
            "description": "Gets or sets the number of label copies.",
            "format": "int32"
          },
          "labelingMode": {
            "$ref": "#/components/schemas/LabelingModeType"
          },
          "ingredientsProportion": {
            "$ref": "#/components/schemas/DimValue"
          },
          "alternateLabelDataOutputChannel": {
            "$ref": "#/components/schemas/AlternateLabelDataOutputChannelType"
          },
          "alternateLabelCriteria": {
            "$ref": "#/components/schemas/AlternateLabelCriteriaType"
          },
          "labelLanguage": {
            "type": "integer",
            "description": "Gets or sets the label language.",
            "format": "int32"
          },
          "countrySecondCurrency": {
            "$ref": "#/components/schemas/GxCurrencyType"
          },
          "printConversionRate": {
            "$ref": "#/components/schemas/PrintConversionRateType"
          },
          "template": {
            "type": "integer",
            "description": "Gets or sets the template.",
            "format": "int32"
          },
          "weightClass": {
            "type": "integer",
            "description": "Gets or sets the weight class.",
            "format": "int32"
          },
          "heightOfPackage": {
            "type": "integer",
            "description": "Gets or sets the height of package.",
            "format": "int32"
          },
          "metalDetectorProductNumber": {
            "type": "string",
            "description": "Gets or sets the metal detector product number.",
            "nullable": true
          },
          "codepage": {
            "$ref": "#/components/schemas/BizerbaCodePage"
          },
          "macroModeT": {
            "type": "string",
            "description": "Gets or sets the macro mode t.",
            "nullable": true
          },
          "nutritionLabelEnabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [nutrition label enabled]."
          },
          "locationsEnabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [locations enabled]."
          },
          "packageLength": {
            "type": "integer",
            "description": "Gets or sets the length of the package.",
            "format": "int32"
          },
          "packageLengthTolerance": {
            "type": "integer",
            "description": "Gets or sets the package length tolerance.",
            "format": "int32"
          },
          "preselectionTotal": {
            "$ref": "#/components/schemas/PreselectionTotal"
          },
          "tendencyRegulationEnabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [tendency regulation enabled]."
          },
          "productNumberLDI": {
            "type": "integer",
            "description": "Gets or sets the product number ldi.",
            "format": "int32"
          },
          "productNumberLCE": {
            "type": "integer",
            "description": "Gets or sets the product number lce.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Article PLU data for labeler article. ***NOTE: For BaseTextFields: Set the Number property to -1 for \"No Text\" or 0 for \"Keep previously loaded text\".\r\nIf only the \"Text\" property is set OR the Number property is conflicting with existing number in database, the backend will try to determine the number automatically by doing the following:\r\nIf a text already exists in the database that exactly matches the \"Text\" property value, use the number of the existing text for the text field Number WITHOUT creating a new text.\r\nElse, create a new text and override the given number with the next available text number and use that number for the text field Number.***"
      },
      "LabelingModeType": {
        "enum": [
          "weight",
          "fixedPrice",
          "fixedWeight",
          "fixedValue",
          "nonFood1",
          "nonFood2",
          "noLabel",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "LabelLayouts": {
        "required": [
          "layoutNumber"
        ],
        "type": "object",
        "properties": {
          "labelProjectName": {
            "type": "string",
            "description": "The name of the label project",
            "nullable": true,
            "example": "Enter the label project name"
          },
          "layoutNumber": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "description": "The number of the layout shown in BRAIN2 GUI. This is different from the number stored in the database for the DeviceLabelLayoutId.",
            "format": "int32"
          },
          "layoutName": {
            "type": "string",
            "description": "The name of the layout in BRAIN2",
            "nullable": true,
            "example": "LayoutName"
          },
          "dotsPerMeter": {
            "$ref": "#/components/schemas/ResolutionDotBarType"
          },
          "characterSet": {
            "$ref": "#/components/schemas/BizerbaCodePage"
          },
          "borderDistance": {
            "type": "integer",
            "description": "The layout border distance",
            "format": "int32",
            "example": 1250
          },
          "labelWidth": {
            "type": "integer",
            "description": "The label width",
            "format": "int32",
            "example": 65370
          },
          "labelHeight": {
            "type": "integer",
            "description": "The label height",
            "format": "int32",
            "example": 33370
          },
          "layoutWidth": {
            "type": "integer",
            "description": "The layout width, region where put the fields",
            "format": "int32",
            "example": 65370
          },
          "layoutHeight": {
            "type": "integer",
            "description": "The layout height, region where put the fields",
            "format": "int32",
            "example": 33370
          },
          "layoutPosX": {
            "type": "integer",
            "description": "The layout offset, position X inside the label",
            "format": "int32",
            "example": 0
          },
          "layoutPosY": {
            "type": "integer",
            "description": "The layout offset, position Y inside the label",
            "format": "int32",
            "example": 0
          },
          "rotation": {
            "$ref": "#/components/schemas/RotationType"
          },
          "decorativeLabelData": {
            "type": "string",
            "description": "The decorative label data(label background)",
            "format": "byte",
            "nullable": true
          },
          "decorativeLabelPath": {
            "type": "string",
            "description": "The decorative label path(label background)",
            "nullable": true,
            "example": ""
          },
          "decorativeLabelShow": {
            "type": "boolean",
            "description": "The decorative label show(label background)"
          },
          "layoutFieldList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LayoutFields"
            },
            "description": "The fields list",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Class containing all the label layout members"
      },
      "LabelMode": {
        "enum": [
          "weight",
          "fixedPrice",
          "fixedWeight",
          "fixedValue",
          "nonFood1",
          "nonFood2",
          "noLabel",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "LabelPreviewDataCollection": {
        "type": "object",
        "properties": {
          "labelProjectName": {
            "type": "string",
            "description": "Name of the layout project used in the label preview",
            "nullable": true,
            "example": "Enter the label project name"
          },
          "layoutNumber": {
            "type": "integer",
            "description": "Number of the layout project used in the label preview",
            "format": "int32"
          },
          "codeFields": {
            "$ref": "#/components/schemas/CodeFields"
          },
          "dateFields": {
            "$ref": "#/components/schemas/DateFields"
          },
          "graphicFields": {
            "$ref": "#/components/schemas/GraphicFields"
          },
          "numberFields": {
            "$ref": "#/components/schemas/NumberFields"
          },
          "priceFields": {
            "$ref": "#/components/schemas/PriceFields"
          },
          "textFields": {
            "$ref": "#/components/schemas/TextFields"
          }
        },
        "additionalProperties": false,
        "description": "Class containing information about all the labelpreviewdata used as key/value pairs\r\nin a post (type) request"
      },
      "LabelPreviewResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Conntains info about an error occured during the execution\r\nof the request",
            "nullable": true
          },
          "data": {
            "type": "string",
            "description": "Contains the image as byte array.",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of the LabelPreviewRequest"
      },
      "LayoutFields": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/LayoutFieldType"
          },
          "varId": {
            "$ref": "#/components/schemas/VarIdType"
          },
          "width": {
            "type": "integer",
            "description": "The field width",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "The field height",
            "format": "int32"
          },
          "posX": {
            "type": "integer",
            "description": "The field offset, position X, inside the layout",
            "format": "int32"
          },
          "posY": {
            "type": "integer",
            "description": "The field offset, position Y, inside the layout",
            "format": "int32"
          },
          "posZ": {
            "type": "integer",
            "description": "The field offset, position Z, inside the layout",
            "format": "int32"
          },
          "horizontalAlignment": {
            "$ref": "#/components/schemas/HorizontalAlignmentType"
          },
          "verticalAlignment": {
            "$ref": "#/components/schemas/VerticalAlignmentType"
          },
          "rotation": {
            "$ref": "#/components/schemas/RotationType"
          },
          "frame": {
            "$ref": "#/components/schemas/FrameType"
          },
          "fill": {
            "$ref": "#/components/schemas/FillingType"
          },
          "autoLine": {
            "$ref": "#/components/schemas/LineBreakType"
          },
          "pattern": {
            "$ref": "#/components/schemas/IntensityType"
          },
          "cutBelowBaseLine": {
            "$ref": "#/components/schemas/DescenderType"
          },
          "cutBeyondCapLine": {
            "$ref": "#/components/schemas/DescenderType"
          },
          "leading": {
            "$ref": "#/components/schemas/LineSpacingType"
          },
          "dynamicContent": {
            "type": "integer",
            "description": "The dynamic content, if the field depends on other object like text, code, logo",
            "format": "int32"
          },
          "fontNumber": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "description": "The font number",
            "format": "int64"
          },
          "logoNumber": {
            "type": "integer",
            "description": "The logo number",
            "format": "int32"
          },
          "textNumber": {
            "type": "integer",
            "description": "The text number",
            "format": "int32"
          },
          "textContent": {
            "type": "string",
            "description": "The text content",
            "nullable": true
          },
          "codeNumber": {
            "type": "integer",
            "description": "The code number",
            "format": "int32"
          },
          "codeType": {
            "$ref": "#/components/schemas/CodeType"
          },
          "codeContent": {
            "type": "string",
            "description": "The code content",
            "nullable": true
          },
          "codeHeight": {
            "type": "integer",
            "description": "The code height",
            "format": "int32"
          },
          "moduleWidth": {
            "type": "integer",
            "description": "The code dots",
            "format": "int32"
          },
          "lines": {
            "type": "integer",
            "description": "The code lines",
            "format": "int32"
          },
          "codeFlags": {
            "$ref": "#/components/schemas/CodeFlags"
          },
          "codeRatio": {
            "$ref": "#/components/schemas/RatioType"
          },
          "codeMask": {
            "type": "integer",
            "description": "The code mask",
            "format": "int32"
          },
          "codeCorrLev": {
            "$ref": "#/components/schemas/CorrectionLevelType"
          },
          "codeRows": {
            "type": "integer",
            "description": "The code rows",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Class containing all the layout fields members"
      },
      "LayoutFieldType": {
        "enum": [
          "undefined",
          "line",
          "rectangle",
          "text",
          "code",
          "logo",
          "stat",
          "region",
          "simpleText",
          "user",
          "group",
          "voiceCode",
          "bosStatistic",
          "clock",
          "bosInternal"
        ],
        "type": "string",
        "description": ""
      },
      "LineBreakType": {
        "enum": [
          "noLineBreak",
          "withLineBreak",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "LineSpacingType": {
        "enum": [
          "minus3",
          "minus2",
          "minus1",
          "zero",
          "plus1",
          "plus2",
          "plus3",
          "plus4",
          "plus5",
          "plus6",
          "plus7",
          "plus8",
          "plus9",
          "automatic",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "NumberFields": {
        "type": "object",
        "properties": {
          "generalNumbers": {
            "$ref": "#/components/schemas/GeneralNumbers"
          },
          "specificNumbers": {
            "$ref": "#/components/schemas/SpecificNumbers"
          }
        },
        "additionalProperties": false,
        "description": "Class containing all the NumberFields members"
      },
      "OeeArticle": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Article name",
            "nullable": true
          },
          "number": {
            "type": "string",
            "description": "Alpha-numeric article number",
            "nullable": true
          },
          "nominalWeight": {
            "$ref": "#/components/schemas/DimValue"
          }
        },
        "additionalProperties": false,
        "description": "Article"
      },
      "OeeMasterDevice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Device identifier",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Device name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Master device"
      },
      "OeeProductionLine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Production line identifier",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Production line name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Production line"
      },
      "OeeRecord": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "The start date of the measurement",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "The end date of the measurement",
            "format": "date-time"
          },
          "productionLine": {
            "$ref": "#/components/schemas/OeeProductionLine"
          },
          "masterDevice": {
            "$ref": "#/components/schemas/OeeMasterDevice"
          },
          "article": {
            "$ref": "#/components/schemas/OeeArticle"
          },
          "quality": {
            "type": "number",
            "description": "The OEE quality value in percent",
            "format": "double"
          },
          "performance": {
            "type": "number",
            "description": "The OEE performance value in percent",
            "format": "double"
          },
          "availability": {
            "type": "number",
            "description": "The OEE availability value in percent",
            "format": "double"
          },
          "oee": {
            "type": "number",
            "description": "The OEE value in percent",
            "format": "double"
          },
          "operatingTime": {
            "type": "integer",
            "description": "The operating time of the production line",
            "format": "int32"
          },
          "netOperatingTime": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "goodPackages": {
            "$ref": "#/components/schemas/Packages"
          },
          "ejectedPackages": {
            "$ref": "#/components/schemas/Packages"
          },
          "totalPackages": {
            "$ref": "#/components/schemas/Packages"
          }
        },
        "additionalProperties": false,
        "description": "OEE measurement"
      },
      "PackageRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the package record",
            "nullable": true
          },
          "identity": {
            "type": "integer",
            "description": "The numeric identifier of the package record",
            "format": "int64"
          },
          "articleName": {
            "type": "string",
            "description": "The article name",
            "nullable": true
          },
          "articleNumber": {
            "type": "string",
            "description": "The alpha-numeric article number",
            "nullable": true
          },
          "batchNumber": {
            "type": "string",
            "description": "The batch number",
            "nullable": true
          },
          "commonNumber1": {
            "type": "integer",
            "description": "The common number 1",
            "format": "int32",
            "nullable": true
          },
          "commonNumber2": {
            "type": "integer",
            "description": "The common number 2",
            "format": "int32",
            "nullable": true
          },
          "commonText1": {
            "type": "string",
            "description": "The common text 1",
            "nullable": true
          },
          "commonText2": {
            "type": "string",
            "description": "The common text 2",
            "nullable": true
          },
          "verificationCounter": {
            "type": "integer",
            "description": "The verification counter (calibration counter)",
            "format": "int64",
            "nullable": true
          },
          "customerNumber": {
            "type": "string",
            "description": "The customer number",
            "nullable": true
          },
          "labelMode": {
            "$ref": "#/components/schemas/LabelMode"
          },
          "numberOfPacks": {
            "type": "integer",
            "description": "Number of packages",
            "format": "int32"
          },
          "numberOfPieces": {
            "type": "integer",
            "description": "Number of pieces per package",
            "format": "int32"
          },
          "orderNumber": {
            "type": "string",
            "description": "The order number",
            "nullable": true
          },
          "packageType": {
            "$ref": "#/components/schemas/PackageType"
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity",
            "format": "int32"
          },
          "scaleNumber": {
            "type": "integer",
            "description": "The number of the weighing scale",
            "format": "int32"
          },
          "timestamp": {
            "type": "string",
            "description": "The date the package record has been processed",
            "format": "date-time"
          },
          "useByDate": {
            "type": "string",
            "description": "The use-by date",
            "format": "date-time",
            "nullable": true
          },
          "user": {
            "type": "string",
            "description": "The user",
            "nullable": true
          },
          "device": {
            "$ref": "#/components/schemas/PackageRecordDevice"
          },
          "grossWeight": {
            "$ref": "#/components/schemas/DimValue"
          },
          "actualNetWeight": {
            "$ref": "#/components/schemas/DimValue"
          },
          "printedNetWeight": {
            "$ref": "#/components/schemas/DimValue"
          },
          "tare": {
            "$ref": "#/components/schemas/DimValue"
          },
          "unitPrice": {
            "$ref": "#/components/schemas/DimValue"
          },
          "salesPrice": {
            "$ref": "#/components/schemas/DimValue"
          },
          "numerators": {
            "$ref": "#/components/schemas/PackageRecordNumerators"
          },
          "error": {
            "$ref": "#/components/schemas/PackageRecordError"
          }
        },
        "additionalProperties": false,
        "description": "A package record that has been processed by a device"
      },
      "PackageRecordDevice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The device identifier",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The device name",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "description": "The device alias",
            "nullable": true
          },
          "workstation": {
            "type": "string",
            "description": "The device workstation that is running the scripts",
            "nullable": true
          },
          "machineNumber": {
            "type": "integer",
            "description": "The device internal machine number",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Device that processed the package record"
      },
      "PackageRecordError": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DeviceErrorType"
          },
          "flag": {
            "type": "integer",
            "description": "Error code",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Package record error"
      },
      "PackageRecordNumerators": {
        "type": "object",
        "properties": {
          "label": {
            "type": "integer",
            "description": "Label numerator",
            "format": "int32",
            "nullable": true
          },
          "total1": {
            "type": "integer",
            "description": "Total 1 numerator",
            "format": "int32",
            "nullable": true
          },
          "total2": {
            "type": "integer",
            "description": "Total 2 numerator",
            "format": "int32",
            "nullable": true
          },
          "total3": {
            "type": "integer",
            "description": "Total 3 numerator",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Numerators which get incremented by the device"
      },
      "Packages": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Number of packages",
            "format": "int32"
          },
          "weight": {
            "$ref": "#/components/schemas/DimValue"
          }
        },
        "additionalProperties": false,
        "description": "Package details"
      },
      "PackageType": {
        "enum": [
          "singlePackage",
          "total1",
          "total2",
          "total3",
          "total",
          "partialBatchTotal",
          "undefined"
        ],
        "type": "string",
        "description": "The type of the package record"
      },
      "PreselectionTotal": {
        "type": "object",
        "properties": {
          "deleteColumnAfterTotal": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [delete column after total]."
          },
          "includeInGlobalTotalization": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [include in global totalization]."
          },
          "preselectionTotal1Type": {
            "$ref": "#/components/schemas/PreselectionTotalType"
          },
          "preselectionTotal1Pieces": {
            "type": "integer",
            "description": "Gets or sets the preselection total1 pieces.",
            "format": "int32"
          },
          "preselectionTotal1WeightValue": {
            "type": "number",
            "description": "Gets or sets the preselection total1 weight.",
            "format": "double"
          },
          "preselectionTotal1PriceValue": {
            "type": "number",
            "description": "Gets or sets the preselection total1 price.",
            "format": "double"
          },
          "preselectionTotal2Type": {
            "$ref": "#/components/schemas/PreselectionTotalType"
          },
          "preselectionTotal2Pieces": {
            "type": "integer",
            "description": "Gets or sets the preselection total2 pieces.",
            "format": "int32"
          },
          "preselectionTotal2WeightValue": {
            "type": "number",
            "description": "Gets or sets the preselection total2 weight.",
            "format": "double"
          },
          "preselectionTotal2PriceValue": {
            "type": "number",
            "description": "Gets or sets the preselection total2 price.",
            "format": "double"
          },
          "preselectionTotal2NumberOfTotal1": {
            "type": "integer",
            "description": "Gets or sets the preselection total2 number of total1.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "PreselectionTotalType": {
        "enum": [
          "weight",
          "price",
          "pieces",
          "total1",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "PriceFields": {
        "type": "object",
        "properties": {
          "specialUnitPrice": {
            "type": "string",
            "description": "Gets or sets the special unit price",
            "nullable": true,
            "example": ""
          },
          "unitPrice": {
            "type": "string",
            "description": "Gets or sets the unit price",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false,
        "description": "Class containing all the price fields members"
      },
      "PrintChannelControlType": {
        "enum": [
          "alwaysActive",
          "inactive",
          "activeSpecialPrice",
          "notActiveSpecialPrice",
          "pair1StartChangeOnEndOfPaper",
          "pair1StandbyChangeOnEndOfPaper",
          "pair1StartAlternatelyAfterEachPackage",
          "pair1StandbyAlternatelyAfterEachPackage",
          "pair2StartChangeOnEndOfPaper",
          "pair2StandbyChangeOnEndOfPaper",
          "pair2StartAlternatelyAfterEachPackage",
          "pair2StandbyAlternatelyAfterEachPackage",
          "pair3StartChangeOnEndOfPaper",
          "pair3StandbyChangeOnEndOfPaper",
          "pair3StartAlternatelyAfterEachPackage",
          "pair3StandbyAlternatelyAfterEachPackage",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "PrintConversionRateType": {
        "enum": [
          "without",
          "with",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProductionLine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the production line",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the production line",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A production line"
      },
      "RatioType": {
        "enum": [
          "one_half",
          "one_two_and_a_half",
          "one_third",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "RecalculateUnitPriceType": {
        "enum": [
          "withoutRecalculation",
          "oneUnitPrice",
          "bothUnitPrices",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "ResolutionDotBarType": {
        "enum": [
          "dpm075",
          "dpm08",
          "dpm12",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "RotationType": {
        "enum": [
          "rotation0",
          "rotation90",
          "rotation180",
          "rotation270",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "SamplePlanStatisticsAlarmResult": {
        "type": "object",
        "properties": {
          "statisticsId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "alarmId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "description": "",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "SamplePlanStatisticsClassResult": {
        "type": "object",
        "properties": {
          "statisticsId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "columnNumber": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "lowerLimit": {
            "$ref": "#/components/schemas/DimValue"
          },
          "upperLimit": {
            "$ref": "#/components/schemas/DimValue"
          },
          "numberOfCheckedPackages": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "numberOfAcceptedPackages": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "SamplePlanStatisticsPositionResult": {
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SamplePlanStatisticsRecordResult"
            },
            "description": "",
            "nullable": true
          },
          "sequenceType": {
            "$ref": "#/components/schemas/StatisticsTestPlanPositionSequenceType"
          },
          "sequencePosition": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "positionType": {
            "$ref": "#/components/schemas/StatisticsTestPlanPositionType"
          },
          "instructionNumber": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "instructionName": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "instructionDescription": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "instructionType": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "instructionData": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "instructionScaleRequired": {
            "type": "boolean",
            "description": ""
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "SamplePlanStatisticsRecordResult": {
        "type": "object",
        "properties": {
          "sequenceType": {
            "$ref": "#/components/schemas/StatisticsTestPlanPositionSequenceType"
          },
          "sequencePosition": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "timestamp": {
            "type": "string",
            "description": "",
            "format": "date-time"
          },
          "user": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "packageNumber": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "gross": {
            "$ref": "#/components/schemas/DimValue"
          },
          "net": {
            "$ref": "#/components/schemas/DimValue"
          },
          "netWeight": {
            "$ref": "#/components/schemas/DimValue"
          },
          "tare": {
            "$ref": "#/components/schemas/DimValue"
          },
          "consecutiveNumber": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "userInput": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "alarmId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "commonText1": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "commonText2": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "commonNumber1": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "commonNumber2": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "lessThanLT1ReadOnly": {
            "type": "boolean",
            "description": ""
          },
          "lessThanLT2ReadOnly": {
            "type": "boolean",
            "description": ""
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "SamplePlanStatisticsValuesResult": {
        "type": "object",
        "properties": {
          "numberOfPackages": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "average": {
            "$ref": "#/components/schemas/DimValue"
          },
          "standardDeviation": {
            "$ref": "#/components/schemas/DimValue"
          },
          "variance": {
            "$ref": "#/components/schemas/DimValue"
          },
          "varianceHelpValue": {
            "$ref": "#/components/schemas/DimValue"
          },
          "cpValue": {
            "type": "number",
            "description": "",
            "format": "double"
          },
          "cpkValue": {
            "type": "number",
            "description": "",
            "format": "double"
          },
          "min": {
            "$ref": "#/components/schemas/DimValue"
          },
          "max": {
            "$ref": "#/components/schemas/DimValue"
          },
          "total": {
            "$ref": "#/components/schemas/DimValue"
          },
          "adjustment": {
            "$ref": "#/components/schemas/DimValue"
          },
          "packagesBetweenLT2AndLT1": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "packagesBetweenLT2AndLT1Percentage": {
            "type": "number",
            "description": "",
            "format": "double"
          },
          "packagesLessThanLT2": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "packagesLessThanLT1ReadOnly": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "packagesGreaterThanUT2": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "packagesBetweenUT1AndUT2": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "packagesGreaterUT1ReadOnly": {
            "type": "integer",
            "description": "",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "SampleTestStatistics": {
        "type": "object",
        "properties": {
          "alarmOccurred": {
            "type": "boolean",
            "description": ""
          },
          "articleNumber": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "articleName": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "tare": {
            "$ref": "#/components/schemas/DimValue"
          },
          "batchNumber": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "lotSize": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "machineNumber": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "deviceName": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "deviceAlias": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "scaleNumber": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "sampleSize": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "samplingPlanName": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "percentageLT2LT1Rule": {
            "type": "number",
            "description": "",
            "format": "double"
          },
          "uT1Company": {
            "$ref": "#/components/schemas/DimValue"
          },
          "uT2Company": {
            "$ref": "#/components/schemas/DimValue"
          },
          "lT1Company": {
            "$ref": "#/components/schemas/DimValue"
          },
          "lT2Company": {
            "$ref": "#/components/schemas/DimValue"
          },
          "processType": {
            "$ref": "#/components/schemas/StatisticsProcessType"
          },
          "commonText1": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "commonText2": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "commonNumber1": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "commonNumber2": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "articleTestPlanNumber": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "articleTestPlanName": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "shiftName": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "weightPerPiece": {
            "$ref": "#/components/schemas/DimValue"
          },
          "nominalValueWeight": {
            "$ref": "#/components/schemas/DimValue"
          },
          "uT1Weight": {
            "$ref": "#/components/schemas/DimValue"
          },
          "uT2Weight": {
            "$ref": "#/components/schemas/DimValue"
          },
          "lT1Weight": {
            "$ref": "#/components/schemas/DimValue"
          },
          "lT2Weight": {
            "$ref": "#/components/schemas/DimValue"
          },
          "verificationInterval": {
            "$ref": "#/components/schemas/DimValue"
          },
          "acceptanceRateBetweenCheckedAccepted": {
            "type": "number",
            "description": "",
            "format": "double"
          },
          "checked": {
            "$ref": "#/components/schemas/SamplePlanStatisticsValuesResult"
          },
          "accepted": {
            "$ref": "#/components/schemas/SamplePlanStatisticsValuesResult"
          },
          "giveawayTotal": {
            "$ref": "#/components/schemas/DimValue"
          },
          "giveawayPercentage": {
            "type": "number",
            "description": "",
            "format": "double"
          },
          "giveawayAverage": {
            "$ref": "#/components/schemas/DimValue"
          },
          "resultStatus": {
            "$ref": "#/components/schemas/StatisticsResultState"
          },
          "usedSamplingStep": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "statisticsClasses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SamplePlanStatisticsClassResult"
            },
            "description": "",
            "nullable": true
          },
          "statisticsPositions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SamplePlanStatisticsPositionResult"
            },
            "description": "",
            "nullable": true
          },
          "statisticsAlarms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SamplePlanStatisticsAlarmResult"
            },
            "description": "",
            "nullable": true
          },
          "statisticsSamplingPlanRanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatisticsSamplingPlanRangeResult"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ScannerCompulsoryType": {
        "enum": [
          "notCompulsory",
          "compulsory",
          "compulsoryOnModification",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "SimpleTexts": {
        "type": "object",
        "properties": {
          "simpleText1": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext1",
            "nullable": true,
            "example": ""
          },
          "simpleText2": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext2",
            "nullable": true,
            "example": ""
          },
          "simpleText3": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext3",
            "nullable": true,
            "example": ""
          },
          "simpleText4": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext4",
            "nullable": true,
            "example": ""
          },
          "simpleText5": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext5",
            "nullable": true,
            "example": ""
          },
          "simpleText6": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext6",
            "nullable": true,
            "example": ""
          },
          "simpleText7": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext7",
            "nullable": true,
            "example": ""
          },
          "simpleText8": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext8",
            "nullable": true,
            "example": ""
          },
          "simpleText9": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext9",
            "nullable": true,
            "example": ""
          },
          "simpleText10": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext10",
            "nullable": true,
            "example": ""
          },
          "simpleText11": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext11",
            "nullable": true,
            "example": ""
          },
          "simpleText12": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext12",
            "nullable": true,
            "example": ""
          },
          "simpleText13": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext13",
            "nullable": true,
            "example": ""
          },
          "simpleText14": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext14",
            "nullable": true,
            "example": ""
          },
          "simpleText15": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext15",
            "nullable": true,
            "example": ""
          },
          "simpleText16": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext16",
            "nullable": true,
            "example": ""
          },
          "simpleText17": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext17",
            "nullable": true,
            "example": ""
          },
          "simpleText18": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext18",
            "nullable": true,
            "example": ""
          },
          "simpleText19": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext19",
            "nullable": true,
            "example": ""
          },
          "simpleText20": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext20",
            "nullable": true,
            "example": ""
          },
          "simpleText21": {
            "type": "string",
            "description": "Gets or sets the Text of the SimpleText21",
            "nullable": true,
            "example": ""
          },
          "simpleText22": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext22",
            "nullable": true,
            "example": ""
          },
          "simpleText23": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext23",
            "nullable": true,
            "example": ""
          },
          "simpleText24": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext24",
            "nullable": true,
            "example": ""
          },
          "simpleText25": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext25",
            "nullable": true,
            "example": ""
          },
          "simpleText26": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext26",
            "nullable": true,
            "example": ""
          },
          "simpleText27": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext27",
            "nullable": true,
            "example": ""
          },
          "simpleText28": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext28",
            "nullable": true,
            "example": ""
          },
          "simpleText29": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext29",
            "nullable": true,
            "example": ""
          },
          "simpleText30": {
            "type": "string",
            "description": "Gets or sets the text of the simpletext30",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false,
        "description": "Class containing all the simple texts members"
      },
      "SpecificNumbers": {
        "type": "object",
        "properties": {
          "batchNumber": {
            "type": "integer",
            "description": "Gets or sets the batch number",
            "format": "int32"
          },
          "customerNumber": {
            "type": "string",
            "description": "Gets or sets the customer number",
            "nullable": true,
            "example": ""
          },
          "deviceNumber": {
            "type": "integer",
            "description": "Gets or sets the device number",
            "format": "int32"
          },
          "lotNumber": {
            "type": "integer",
            "description": "Gets or sets the lot number",
            "format": "int32"
          },
          "numerator": {
            "type": "integer",
            "description": "Gets or sets the numerator",
            "format": "int32"
          },
          "operatorNumber": {
            "type": "integer",
            "description": "Gets or sets the operator number",
            "format": "int32"
          },
          "pcsPerPackage": {
            "type": "string",
            "description": "Gets or sets the pieces per package",
            "nullable": true,
            "example": ""
          },
          "pieceTotal": {
            "type": "integer",
            "description": "Gets or sets the piece total",
            "format": "int32"
          },
          "pluNumber": {
            "type": "string",
            "description": "Gets or sets the plu number",
            "nullable": true,
            "example": ""
          },
          "plusDays": {
            "type": "integer",
            "description": "Gets or sets the plus days",
            "format": "int32"
          },
          "wgNumber": {
            "type": "integer",
            "description": "Gets or sets the  wg number",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Class containing all the specific numbers members"
      },
      "StaticTexts": {
        "type": "object",
        "properties": {
          "staticText1": {
            "type": "string",
            "description": "Gets or sets the text of the statictext1",
            "nullable": true,
            "example": ""
          },
          "staticText2": {
            "type": "string",
            "description": "Gets or sets the text of the statictext2",
            "nullable": true,
            "example": ""
          },
          "staticText3": {
            "type": "string",
            "description": "Gets or sets the text of the statictext3",
            "nullable": true,
            "example": ""
          },
          "staticText4": {
            "type": "string",
            "description": "Gets or sets the text of the statictext4",
            "nullable": true,
            "example": ""
          },
          "staticText5": {
            "type": "string",
            "description": "Gets or sets the text of the statictext5",
            "nullable": true,
            "example": ""
          },
          "staticText6": {
            "type": "string",
            "description": "Gets or sets the text of the statictext6",
            "nullable": true,
            "example": ""
          },
          "staticText7": {
            "type": "string",
            "description": "Gets or sets the text of the statictext7",
            "nullable": true,
            "example": ""
          },
          "staticText8": {
            "type": "string",
            "description": "Gets or sets the text of the statictext8",
            "nullable": true,
            "example": ""
          },
          "staticText9": {
            "type": "string",
            "description": "Gets or sets the text of the statictext9",
            "nullable": true,
            "example": ""
          },
          "staticText10": {
            "type": "string",
            "description": "Gets or sets the text of the statictext10",
            "nullable": true,
            "example": ""
          },
          "staticText11": {
            "type": "string",
            "description": "Gets or sets the text of the statictext11",
            "nullable": true,
            "example": ""
          },
          "staticText12": {
            "type": "string",
            "description": "Gets or sets the text of the statictext12",
            "nullable": true,
            "example": ""
          },
          "staticText13": {
            "type": "string",
            "description": "Gets or sets the text of the statictext13",
            "nullable": true,
            "example": ""
          },
          "staticText14": {
            "type": "string",
            "description": "Gets or sets the text of the statictext14",
            "nullable": true,
            "example": ""
          },
          "staticText15": {
            "type": "string",
            "description": "Gets or sets the text of the statictext15",
            "nullable": true,
            "example": ""
          },
          "staticText16": {
            "type": "string",
            "description": "Gets or sets the text of the statictext16",
            "nullable": true,
            "example": ""
          },
          "staticText17": {
            "type": "string",
            "description": "Gets or sets the text of the statictext17",
            "nullable": true,
            "example": ""
          },
          "staticText18": {
            "type": "string",
            "description": "Gets or sets the text of the statictext18",
            "nullable": true,
            "example": ""
          },
          "staticText19": {
            "type": "string",
            "description": "Gets or sets the text of the statictext19",
            "nullable": true,
            "example": ""
          },
          "staticText20": {
            "type": "string",
            "description": "Gets or sets the text of the statictext20",
            "nullable": true,
            "example": ""
          },
          "staticText21": {
            "type": "string",
            "description": "Gets or sets the text of the statictext21",
            "nullable": true,
            "example": ""
          },
          "staticText22": {
            "type": "string",
            "description": "Gets or sets the text of the statictext22",
            "nullable": true,
            "example": ""
          },
          "staticText23": {
            "type": "string",
            "description": "Gets or sets the text of the statictext23",
            "nullable": true,
            "example": ""
          },
          "staticText24": {
            "type": "string",
            "description": "Gets or sets the text of the statictext24",
            "nullable": true,
            "example": ""
          },
          "staticText25": {
            "type": "string",
            "description": "Gets or sets the text of the statictext25",
            "nullable": true,
            "example": ""
          },
          "staticText26": {
            "type": "string",
            "description": "Gets or sets the text of the statictext26",
            "nullable": true,
            "example": ""
          },
          "staticText27": {
            "type": "string",
            "description": "Gets or sets the text of the statictext27",
            "nullable": true,
            "example": ""
          },
          "staticText28": {
            "type": "string",
            "description": "Gets or sets the text of the statictext28",
            "nullable": true,
            "example": ""
          },
          "staticText29": {
            "type": "string",
            "description": "Gets or sets the text of the statictext29",
            "nullable": true,
            "example": ""
          },
          "staticText30": {
            "type": "string",
            "description": "Gets or sets the text of the statictext30",
            "nullable": true,
            "example": ""
          },
          "staticText31": {
            "type": "string",
            "description": "Gets or sets the text of the statictext31",
            "nullable": true,
            "example": ""
          },
          "staticText32": {
            "type": "string",
            "description": "Gets or sets the text of the statictext32",
            "nullable": true,
            "example": ""
          },
          "staticText33": {
            "type": "string",
            "description": "Gets or sets the text of the statictext33",
            "nullable": true,
            "example": ""
          },
          "staticText34": {
            "type": "string",
            "description": "Gets or sets the text of the statictext34",
            "nullable": true,
            "example": ""
          },
          "staticText35": {
            "type": "string",
            "description": "Gets or sets the text of the statictext35",
            "nullable": true,
            "example": ""
          },
          "staticText36": {
            "type": "string",
            "description": "Gets or sets the text of the statictext36",
            "nullable": true,
            "example": ""
          },
          "staticText37": {
            "type": "string",
            "description": "Gets or sets the text of the statictext37",
            "nullable": true,
            "example": ""
          },
          "staticText38": {
            "type": "string",
            "description": "Gets or sets the text of the statictext38",
            "nullable": true,
            "example": ""
          },
          "staticText39": {
            "type": "string",
            "description": "Gets or sets the text of the statictext39",
            "nullable": true,
            "example": ""
          },
          "staticText40": {
            "type": "string",
            "description": "Gets or sets the text of the statictext40",
            "nullable": true,
            "example": ""
          },
          "staticText41": {
            "type": "string",
            "description": "Gets or sets the text of the statictext41",
            "nullable": true,
            "example": ""
          },
          "staticText42": {
            "type": "string",
            "description": "Gets or sets the text of the statictext42",
            "nullable": true,
            "example": ""
          },
          "staticText43": {
            "type": "string",
            "description": "Gets or sets the text of the statictext43",
            "nullable": true,
            "example": ""
          },
          "staticText44": {
            "type": "string",
            "description": "Gets or sets the text of the statictext44",
            "nullable": true,
            "example": ""
          },
          "staticText45": {
            "type": "string",
            "description": "Gets or sets the text of the statictext45",
            "nullable": true,
            "example": ""
          },
          "staticText46": {
            "type": "string",
            "description": "Gets or sets the text of the statictext46",
            "nullable": true,
            "example": ""
          },
          "staticText47": {
            "type": "string",
            "description": "Gets or sets the text of the statictext47",
            "nullable": true,
            "example": ""
          },
          "staticText48": {
            "type": "string",
            "description": "Gets or sets the text of the statictext48",
            "nullable": true,
            "example": ""
          },
          "staticText49": {
            "type": "string",
            "description": "Gets or sets the text of the statictext49",
            "nullable": true,
            "example": ""
          },
          "staticText50": {
            "type": "string",
            "description": "Gets or sets the text of the statictext50",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false,
        "description": "Class containing all the statictexts members"
      },
      "StatisticArticle": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Article name",
            "nullable": true
          },
          "number": {
            "type": "string",
            "description": "Article number",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Article related to the statistics"
      },
      "Statistics": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "statisticsType": {
            "$ref": "#/components/schemas/StatisticsType"
          },
          "statisticsIsSecondary": {
            "type": "boolean",
            "description": ""
          },
          "article": {
            "$ref": "#/components/schemas/StatisticArticle"
          },
          "device": {
            "$ref": "#/components/schemas/StatisticsDevice"
          },
          "batchNumber": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "orderNumber": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "gxVersion": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "tare": {
            "$ref": "#/components/schemas/DimValue"
          },
          "nominalWeight": {
            "$ref": "#/components/schemas/DimValue"
          },
          "toleranceLower1": {
            "$ref": "#/components/schemas/DimValue"
          },
          "toleranceLower2": {
            "$ref": "#/components/schemas/DimValue"
          },
          "toleranceUpper": {
            "$ref": "#/components/schemas/DimValue"
          },
          "toleranceUpper1": {
            "$ref": "#/components/schemas/DimValue"
          },
          "checkedCpValue": {
            "type": "number",
            "description": "Process capability index CP",
            "format": "double"
          },
          "checkedCpkValue": {
            "type": "number",
            "description": "Process capability index CPK",
            "format": "double"
          },
          "checked": {
            "$ref": "#/components/schemas/StatisticsValues"
          },
          "accepted": {
            "$ref": "#/components/schemas/StatisticsValues"
          },
          "numberOfPackagesTooLight": {
            "type": "integer",
            "description": "Number of packages which are too light",
            "format": "int32"
          },
          "numberOfPackagesTooHeavy": {
            "type": "integer",
            "description": "Number of packages which are too heavy",
            "format": "int32"
          },
          "numberOfPackagesContainingMetal": {
            "type": "integer",
            "description": "Number of packages which contain metal",
            "format": "int32"
          },
          "acceptanceRateBetweenCheckedAcceptedInPercent": {
            "type": "number",
            "description": "Acceptance rate in percent",
            "format": "double"
          },
          "acceptedPackagesBetweenLT2AndLT1InPercent": {
            "type": "number",
            "description": "Accepted packages between LT1 and LT2 in percent",
            "format": "double"
          },
          "giveAway": {
            "$ref": "#/components/schemas/StatisticsGiveAway"
          },
          "commonNumber1": {
            "type": "integer",
            "description": "The common number 1",
            "format": "int32"
          },
          "commonNumber2": {
            "type": "integer",
            "description": "The common number 2",
            "format": "int32"
          },
          "commonText1": {
            "type": "string",
            "description": "The common text 1",
            "nullable": true
          },
          "commonText2": {
            "type": "string",
            "description": "The common text 2",
            "nullable": true
          },
          "classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatisticsClass"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Statistics"
      },
      "StatisticsClass": {
        "type": "object",
        "properties": {
          "columnNumber": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "numberOfCheckedPackages": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "numberOfAcceptedPackages": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "lowerLimit": {
            "$ref": "#/components/schemas/DimValue"
          },
          "upperLimit": {
            "$ref": "#/components/schemas/DimValue"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "StatisticsDevice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The device identifier",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The device name",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "description": "The device alias",
            "nullable": true
          },
          "workstation": {
            "type": "string",
            "description": "The device workstation that is running the scripts",
            "nullable": true
          },
          "machineNumber": {
            "type": "string",
            "description": "The device internal machine number",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Device related to the statistics"
      },
      "StatisticsGiveAway": {
        "type": "object",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/DimValue"
          },
          "average": {
            "$ref": "#/components/schemas/DimValue"
          },
          "percentage": {
            "type": "number",
            "description": "Give away in percent",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Statistics about the give away"
      },
      "StatisticsProcessType": {
        "enum": [
          "sampleTest",
          "sampleTest_StackedWeighing",
          "sampleTest_VariableTare",
          "sampleTest_StackedWeighingWithVariableTare",
          "oneHundretPercentControl_SingleWeighingsStatistics",
          "sampleTest_Destructive",
          "sampleTest_Destructive_VariableTare",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "StatisticsResultState": {
        "enum": [
          "passed",
          "failed_AverageLessThanNominalValue",
          "failed_NumberOfPackagesLessThanN",
          "failed_NumberOfPackagesLessThanLT1GreaterOrEqualD",
          "failed_NumberOfPackagesLessThanLT1GreaterCandSmallerD",
          "failed_AverageLessThanMinimumValue",
          "failed_NumberOfPackagesBetweeenLT1andLT2GreaterAs2Percentage",
          "failed_PackgeLessThanLT2",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "StatisticsSamplingPlanRangeResult": {
        "type": "object",
        "properties": {
          "samplingStep": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "lotThresholdFrom": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "lotThresholdTo": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "n": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "d": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "c": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "k": {
            "type": "number",
            "description": "",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "StatisticsTestPlanPositionSequenceType": {
        "enum": [
          "before",
          "during",
          "after",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "StatisticsTestPlanPositionType": {
        "enum": [
          "weight",
          "instruction",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "StatisticsType": {
        "enum": [
          "noStatistics",
          "fpv",
          "freeBorders",
          "freeStatistics",
          "usaNonRegulatedUSDA",
          "slidingAverage",
          "withoutAverageValueCriteria",
          "usaRegulatedUSDA",
          "usaRegulatedUSDAFluids",
          "fpvCanada",
          "ipem",
          "undefined"
        ],
        "type": "string",
        "description": "The type of the statistics"
      },
      "StatisticsValues": {
        "type": "object",
        "properties": {
          "numberOfPackages": {
            "type": "integer",
            "description": "Number of packages",
            "format": "int32"
          },
          "average": {
            "$ref": "#/components/schemas/DimValue"
          },
          "standardDeviation": {
            "$ref": "#/components/schemas/DimValue"
          },
          "min": {
            "$ref": "#/components/schemas/DimValue"
          },
          "max": {
            "$ref": "#/components/schemas/DimValue"
          },
          "total": {
            "$ref": "#/components/schemas/DimValue"
          },
          "numberOfPackagesBetweenLT2AndLT1": {
            "type": "integer",
            "description": "Number of packages between LT2 and LT1",
            "format": "int32"
          },
          "numberOfPackagesBetweenLT1AndNominal": {
            "type": "integer",
            "description": "Number of packages between LT1 and nominal",
            "format": "int32"
          },
          "numberOfPackagesBetweenNominalAndUT1": {
            "type": "integer",
            "description": "Number of packages between nominal and UT1",
            "format": "int32"
          },
          "numberOfPackagesBetweenUT1AndUT2": {
            "type": "integer",
            "description": "Number of packages between UT1 and UT2",
            "format": "int32"
          },
          "totalBetweenLT2AndLT1": {
            "$ref": "#/components/schemas/DimValue"
          },
          "totalBetweenLT1AndNominal": {
            "$ref": "#/components/schemas/DimValue"
          },
          "totalBetweenNominalAndUT1": {
            "$ref": "#/components/schemas/DimValue"
          },
          "totalBetweenUT1AndUT2": {
            "$ref": "#/components/schemas/DimValue"
          }
        },
        "additionalProperties": false,
        "description": "Statistics values"
      },
      "TextFields": {
        "type": "object",
        "properties": {
          "articleText": {
            "type": "string",
            "description": "Gets or sets the text of the article",
            "nullable": true,
            "example": ""
          },
          "simpleTexts": {
            "$ref": "#/components/schemas/SimpleTexts"
          },
          "staticTexts": {
            "$ref": "#/components/schemas/StaticTexts"
          },
          "generalTexts": {
            "$ref": "#/components/schemas/GeneralTexts"
          }
        },
        "additionalProperties": false,
        "description": "Class containing all the textfields members"
      },
      "TimePrintConfigurationType": {
        "enum": [
          "noPrintoutOfTime",
          "printoutOfTime",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "TokenRequest": {
        "type": "object",
        "properties": {
          "authenticationMode": {
            "$ref": "#/components/schemas/AuthenticationMode"
          },
          "userName": {
            "type": "string",
            "description": "The user name of the user that requests the token \r\n(only required if AuthenticationMode=Credentials)",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "The password of the user that requests the token\r\n(only required if AuthenticationMode=Credentials)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to get a JSON Web Token for an user"
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/TokenUser"
          },
          "token": {
            "type": "string",
            "description": "The JWT for the user",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The JSON Web Token response"
      },
      "TokenUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The user id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The user name",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "The user's language selected in BRAIN2",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The user"
      },
      "VarIdType": {
        "enum": [
          "weight",
          "weight02",
          "drainedWeight",
          "grossWeight",
          "unitPrice",
          "specialPriceunit",
          "price",
          "specialPrice",
          "tare",
          "tareText",
          "pluNumber",
          "customerNumber",
          "wgNumber",
          "operatorNumber",
          "numerator",
          "deviceNumber",
          "piecesPerPackage",
          "ingredientsProportion",
          "unitPriceUnit",
          "dateText01",
          "dateText02",
          "dateText03",
          "weightText",
          "priceText",
          "date01",
          "date02",
          "date03",
          "plusDays",
          "code01",
          "code02",
          "code03",
          "code04",
          "code05",
          "clock01",
          "clock02",
          "codeNumber01",
          "codeNumber02",
          "codeNumber03",
          "pieceTotal",
          "weightTotal",
          "priceTotal",
          "generalNumber01",
          "generalNumber02",
          "generalNumber03",
          "grossWeightText",
          "priceDifference",
          "differencePriceText",
          "specialPriceValid",
          "specialPriceInvalid",
          "lotNumber",
          "generalText01",
          "generalText02",
          "generalText03",
          "generalText04",
          "generalText05",
          "generalText06",
          "generalText07",
          "generalText08",
          "generalText09",
          "generalText10",
          "specialPriceText",
          "euroE",
          "articleText",
          "drainedWeightText",
          "batchNumber",
          "generalText11",
          "generalText12",
          "generalText13",
          "generalText14",
          "generalText15",
          "codeNumber04",
          "codeNumber05",
          "codeString01",
          "codeString02",
          "codeString03",
          "codeString04",
          "codeString05",
          "foreignCurrencyUnitPrice",
          "foreignCurrencyPrice",
          "netFilledQuantity",
          "foreignSpecialUnitPrice",
          "foreignSpecificSpecialPrice",
          "foreignConversionRate",
          "foreignCurrencyPriceTotal",
          "foreigndifferencePrice",
          "validSpecialPriceInForeignCurrency",
          "invalidSpecialPriceInForeignCurrency",
          "generalText16",
          "generalText17",
          "generalText18",
          "generalText19",
          "generalText20",
          "fixedText",
          "simpleText01",
          "simpleText02",
          "simpleText03",
          "simpleText04",
          "simpleText05",
          "simpleText06",
          "simpleText07",
          "simpleText08",
          "simpleText09",
          "simpleText10",
          "generalNumber04",
          "generalNumber05",
          "staticText01",
          "staticText02",
          "staticText03",
          "staticText04",
          "staticText05",
          "staticText06",
          "staticText07",
          "staticText08",
          "staticText09",
          "staticText10",
          "staticText11",
          "staticText12",
          "staticText13",
          "staticText14",
          "staticText15",
          "staticText16",
          "staticText17",
          "staticText18",
          "staticText19",
          "staticText20",
          "staticText21",
          "staticText22",
          "staticText23",
          "staticText24",
          "staticText25",
          "staticText26",
          "staticText27",
          "staticText28",
          "staticText29",
          "staticText30",
          "staticText31",
          "staticText32",
          "staticText33",
          "staticText34",
          "staticText35",
          "staticText36",
          "staticText37",
          "staticText38",
          "staticText39",
          "staticText40",
          "staticText41",
          "staticText42",
          "staticText43",
          "staticText44",
          "staticText45",
          "staticText46",
          "staticText47",
          "staticText48",
          "staticText49",
          "staticText50",
          "generalNumber06",
          "generalNumber07",
          "generalNumber08",
          "generalNumber09",
          "generalNumber10",
          "generalNumber11",
          "generalNumber12",
          "generalNumber13",
          "generalNumber14",
          "generalNumber15",
          "generalNumber16",
          "generalNumber17",
          "generalNumber18",
          "generalNumber19",
          "generalNumber20",
          "code06",
          "code07",
          "codeString06",
          "codeString07",
          "codeNumber06",
          "codeNumber07",
          "priceTextValid",
          "basePriceValid",
          "ttiLogo",
          "ttiuvFilterFoil",
          "fixCode",
          "simpleText11",
          "simpleText12",
          "simpleText13",
          "simpleText14",
          "simpleText15",
          "simpleText16",
          "simpleText17",
          "simpleText18",
          "simpleText19",
          "simpleText20",
          "simpleText21",
          "simpleText22",
          "simpleText23",
          "simpleText24",
          "simpleText25",
          "simpleText26",
          "simpleText27",
          "simpleText28",
          "simpleText29",
          "simpleText30",
          "voiceCode",
          "undefined"
        ],
        "type": "string",
        "description": ""
      },
      "VerticalAlignmentType": {
        "enum": [
          "top",
          "middle",
          "bottom",
          "undefined"
        ],
        "type": "string",
        "description": ""
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme.<br> First get a valid TOKEN from the /api/token endpoint.<br><br> Value has to be: 'Bearer TOKEN'.<br><br>",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ],
  "tags": [
    {
      "name": "Token",
      "description": "Endpoint for authentication"
    },
    {
      "name": "Statistics",
      "description": "Endpoint for statistics"
    },
    {
      "name": "SampleTestStatistics",
      "description": "Endpoint for sampleTest statistics"
    },
    {
      "name": "ProductionLines",
      "description": "Endpoint for production lines"
    },
    {
      "name": "PackageRecords",
      "description": "Endpoint for package records"
    },
    {
      "name": "OeeRecords",
      "description": "Endpoint for OEE records"
    },
    {
      "name": "LabelPreview",
      "description": "Endpoint for LabelPreview"
    },
    {
      "name": "LabelLayout",
      "description": "Endpoint for LabelLayout"
    },
    {
      "name": "Devices",
      "description": "Endpoint for devices"
    },
    {
      "name": "Articles",
      "description": "Endpoint for Articles"
    },
    {
      "name": "LabelerArticle",
      "description": ""
    }
  ]
}